<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:CustomWPF="clr-namespace:PFTSUITemplate.Controls">
    <Style x:Key="{x:Type CustomWPF:TabItemLeft}" TargetType="{x:Type CustomWPF:TabItemLeft}">
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.Margin" Value="0" />
        <Setter Property="Control.Padding" Value="6,2" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CustomWPF:TabItemLeft}">
                    <Grid Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*" />
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="1.5*" />
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="3*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle Name="HorizontalLine" Grid.Row="0" Height="1"  HorizontalAlignment="Stretch" Fill="#FFFFFFFF" VerticalAlignment="Top"/>
                        <Border Name="mainBorder" Grid.Row="1"  Background="{TemplateBinding Control.Background}" Width="45" Height="50"
                                HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                                          Content="{TemplateBinding HeaderedContentControl.Header}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" 
                                          ContentSource="Header" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                          Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Control.Foreground}" />
                        <Rectangle Name="HorizontalSeparator" Grid.Row="5" Height="2"  HorizontalAlignment="Stretch" Fill="{DynamicResource rectStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter TargetName="templateRoot" Value="{Binding MyMoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Property="Panel.Background" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="templateRoot" Value="{Binding MyEnterBrush, RelativeSource={RelativeSource TemplatedParent}}" Property="Panel.Background" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>