<Application x:Class="PFTSDesktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:element="clr-namespace:PFTSUITemplate.Element;assembly=PFTSUITemplate"
             xmlns:tmp="clr-namespace:PFTSUITemplate.Controls;assembly=PFTSUITemplate"
             xmlns:vw="clr-namespace:PFTSDesktop.View.DeviceManager"
             xmlns:monitor="clr-namespace:PFTSDesktop.View.Monitoring"
             xmlns:vm="clr-namespace:PFTSDesktop.ViewModel">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/PFTSUITemplate;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type vm:LockerManagerViewModel}">
                <vw:LockerManagerControl/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:CameraManagerViewModel}">
                <vw:CameraManagerControl/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:RFIDManagerViewModel}">
                <vw:RFIDManagerControl/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:VestManagerViewModel}">
                <vw:VestManagerControl/>
            </DataTemplate>

            <SolidColorBrush x:Key="windowStyle" Color="#17b38e" />
            
            <Style x:Key="dataGridStyle" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style x:Key="radioBtnStyle" TargetType="tmp:ButtonTemplet">
                <Setter Property="Height" Value="35"/>
                <Setter Property="FontFamily" Value="黑体"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#827e7e"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="element:RegularText" x:Key="textboxStyle">
                <Setter Property="BorderBrush" Value="#7debd2"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="Foreground" Value="#17b38e"></Setter>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            <Style x:Key="dataGridComStyle" TargetType="CheckBox">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <DataTemplate DataType="{x:Type ValidationError}">
                <TextBlock  FontStyle="Italic" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,1" Text="{Binding Path=ErrorContent}"/>
            </DataTemplate>
            <Style x:Key="lableProStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="黑体" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="#e77615" />
            </Style>
            <Style x:Key="lableNameStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="黑体" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Foreground" Value="#827e7e" />
            </Style>
            <Style x:Key="checkBoxStyle" TargetType="CheckBox">
                <Setter Property="FontFamily" Value="黑体" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="#827e7e" />
            </Style>


            <Style x:Key="dateStyle" TargetType="DatePicker">
                <Setter Property="BorderBrush" Value="#7debd2" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Foreground" Value="#17b38e" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style x:Key="comboxStyle" TargetType="ComboBox">
                <Setter Property="BorderBrush" Value="#7debd2" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="#17b38e" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style x:Key="ckStyle" TargetType="CheckBox">
                <Setter Property="BorderBrush" Value="#0aa783" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Foreground" Value="#17b38e" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style x:Key="pwdStyle" TargetType="PasswordBox">
                <Setter Property="BorderBrush" Value="#7debd2" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Foreground" Value="#17b38e" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Storyboard1">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="glow"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Storyboard2">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                   Storyboard.TargetName="glow"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>

                            </ControlTemplate.Resources>

                            <Grid>
                                <Border BorderBrush="White"
                                        BorderThickness="1"
                                        CornerRadius="8">
                                    <Border x:Name="border"
                                            Background="#0aa783"
                                            BorderBrush="#0aa783"
                                            BorderThickness="1"
                                            CornerRadius="8">
                                        <Grid Margin="-1,-1,-1,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.495*" />
                                                <RowDefinition Height="0.505*" />
                                            </Grid.RowDefinitions>
                                            <Border x:Name="glow"
                                                    Grid.RowSpan="2"
                                                    Margin="0"
                                                    BorderBrush="{x:Null}"
                                                    BorderThickness="1"
                                                    CornerRadius="8"
                                                    Opacity="0">
                                                <Border.Background>
                                                    <RadialGradientBrush Center="0.485,1.053" GradientOrigin="0.485,1.053" RadiusX="0.818" RadiusY="1.214">
                                                        <RadialGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5"
                                                                                CenterY="0.5"
                                                                                ScaleX="0.95" />
                                                                <SkewTransform CenterX="0.5" CenterY="0.5" />
                                                                <RotateTransform CenterX="0.5" CenterY="0.5" />
                                                                <TranslateTransform />
                                                            </TransformGroup>
                                                        </RadialGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="0.003" Color="#CC15F9B3" />
                                                        <GradientStop Offset="1" Color="#0021F2EC" />
                                                    </RadialGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <ContentPresenter Grid.RowSpan="2"
                                                              Margin="0"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center" />
                                            <Border x:Name="shine"
                                                    Margin="0,-0.667,0,0.667"
                                                    BorderBrush="{x:Null}"
                                                    BorderThickness="1"
                                                    CornerRadius="5,5,0,0">
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                        <LinearGradientBrush.RelativeTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform CenterX="0.5" CenterY="0.5" />
                                                                <SkewTransform CenterX="0.5" CenterY="0.5" />
                                                                <RotateTransform Angle="-6.513" CenterX="0.5" CenterY="0.5" />
                                                                <TranslateTransform />
                                                            </TransformGroup>
                                                        </LinearGradientBrush.RelativeTransform>
                                                        <GradientStop Offset="0" Color="#99FFFFFF" />
                                                        <GradientStop Offset="0.991" Color="#33FFFFFF" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="glow" Property="Visibility" Value="Hidden" />
                                    <Setter TargetName="shine" Property="Opacity" Value="0.4" />
                                    <Setter TargetName="border" Property="Background" Value="#0a7c59" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="glow" Property="Visibility" Value="Hidden" />
                                    <Setter TargetName="border" Property="Background" Value="#82d1bf" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#82d1bf" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}" />
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="newsButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0"
                                    CornerRadius="5"
                                    TextBlock.FontSize="13"
                                    TextBlock.Foreground="White"
                                    TextBlock.TextAlignment="Center">
                                <Grid>
                                    <Rectangle Name="FocusCue"
                                               SnapsToDevicePixels="True"
                                               Stroke="Black"
                                               StrokeDashArray="1 2"
                                               StrokeThickness="1"
                                               Visibility="Hidden" />
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                      VerticalAlignment="Center"
                                                      RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#ffb7a83b" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#ff5bbb45" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="FocusCue" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="Gray" />
                                    <Setter Property="TextBlock.Foreground" Value="#FFD2CACB" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
                <ControlTemplate.Resources>
                    <Storyboard x:Key="Storyboard1">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                       Storyboard.TargetName="glow"
                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="Storyboard2">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                       Storyboard.TargetName="glow"
                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </ControlTemplate.Resources>
                <Grid>
                    <Border x:Name="border"
                            Background="#0aa783"
                            BorderBrush="#0aa783"
                            BorderThickness="1"
                            CornerRadius="8">
                        <Grid Margin="-1,-1,-1,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.495*" />
                                <RowDefinition Height="0.505*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="glow"
                                    Grid.RowSpan="2"
                                    Margin="0"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="1"
                                    CornerRadius="8"
                                    Opacity="0">
                                <Border.Background>
                                    <RadialGradientBrush Center="0.485,1.053" GradientOrigin="0.485,1.053" RadiusX="0.818" RadiusY="1.214">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5"
                                                                CenterY="0.5"
                                                                ScaleX="0.95" />
                                                <SkewTransform CenterX="0.5" CenterY="0.5" />
                                                <RotateTransform CenterX="0.5" CenterY="0.5" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="0.003" Color="#CC15F9B3" />
                                        <GradientStop Offset="1" Color="#0021F2EC" />
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter Grid.RowSpan="2"
                                              Margin="0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="glow" Property="Visibility" Value="Hidden" />
                        <Setter TargetName="border" Property="Background" Value="#0aa783" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="glow" Property="Visibility" Value="Hidden" />
                        <Setter TargetName="border" Property="Background" Value="#82d1bf" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}" />
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}" />
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Color x:Key="LineColor">SkyBlue</Color>
            <Color x:Key="CloumnUpColor">#effcf9</Color>
            <ImageSource x:Key="BackGroudImage">/PFTSDesktop;component/Images/backGround.png</ImageSource>
            <Color x:Key="CloumnDownColor">#e9f2f1</Color>
            <Style x:Key="DataGridCellstyle" TargetType="DataGridCell">
                <Setter Property="ToolTipService.ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content.Text}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#0ba984" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderBrush" Value="#0ba984" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Visibility x:Key="Color_ImageOrColor">Collapsed</Visibility>
            <Visibility x:Key="Image_ImageOrColor">Visible</Visibility>

            <Color x:Key="BackGroudColor">red</Color>
            <SolidColorBrush x:Key="gridStyle" Color="#e3f3ef" />
            <SolidColorBrush x:Key="rectStyle" Color="#cdcdcd" />
            <SolidColorBrush x:Key="treeStyle" Color="#cbe7e0" />
            <SolidColorBrush x:Key="dataGridBobrush" Color="LightBlue" />
            <SolidColorBrush x:Key="winGridStyle" Color="#0caf88" />
            <SolidColorBrush x:Key="winConStyle" Color="#e6faf5" />
            <Color x:Key="solidColorStyle">#cbe7e0</Color>
            <Style x:Key="btnStyle" TargetType="Button">
                <Setter Property="Margin" Value="5,5,5,5" />
                <Setter Property="Cursor" Value="Hand" />

                <Setter Property="FontSize" Value="13" />
                <Setter Property="FontFamily" Value="黑体" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Border Width="{TemplateBinding Width}"
                                        HorizontalAlignment="Center"
                                        Background="Transparent"
                                        BorderThickness="1">
                                    <TextBlock Margin="3 0 3 0"
                                               HorizontalAlignment="Center"
                                               Text="{TemplateBinding Content}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#89ffe3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="GridViewColumnHeader">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="BackgroundRectangle"
                                           Grid.RowSpan="3"
                                           Grid.ColumnSpan="3"
                                           Stretch="Fill">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0.5" Color="#effcf9" />
                                            <GradientStop Offset="1" Color="#e9f2f1" />

                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter x:Name="HeaderText"
                                                  Grid.RowSpan="2"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding Content}" />
                                <Rectangle Name="VerticalSeparator"
                                           Grid.RowSpan="2"
                                           Grid.Column="2"
                                           Width="1"
                                           VerticalAlignment="Stretch">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="White" />
                                            <GradientStop Offset="0.5" Color="SkyBlue" />
                                            <GradientStop Offset="1" Color="White" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <!--  这里的Fill就可以设置分隔线的颜色  -->
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="#827e7e" />
                <Setter Property="FontFamily" Value="黑体" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="40" />
            </Style>
            <ImageSource x:Key="btnImage">/PFTSDesktop;component/Images/btnImage.png</ImageSource>


            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
            </ControlTemplate>

            <Style TargetType="{x:Type ComboBox}" x:Key="comboxStyleEx" BasedOn="{StaticResource comboxStyle}">
                <Setter Property="Height" Value="30"/>
               
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                                <ToggleButton Grid.Column="2"  Style="{DynamicResource ComboToggleButton}"  x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite"   VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" 
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                                <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 -->
                                <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                                <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                                <!--弹出下拉控件-->
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                  MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border x:Name="PopupBorder" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch"
                                        Height="Auto" BorderBrush="#7debd2"
                                        Background="{StaticResource PopupBackground}">
                                        </Border>
                                        <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="1">
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DefaultGridViewScrollViewerStyle" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <DockPanel Margin="{TemplateBinding Padding}">
                                    <ScrollViewer DockPanel.Dock="Top" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                        <GridViewHeaderRowPresenter AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Margin="0" Visibility="Visible" x:Name="PART_Header" Height="auto"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Content="{TemplateBinding Content}"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </DockPanel>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0.0" Orientation="Horizontal" Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" />
                                <ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0.0" Orientation="Vertical"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Columns, ElementName=PART_Header}" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="PART_Header" Value="Collapsed"></Setter>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--DefaultListViewItem-->
            <Style x:Key="DefaultListViewItem" TargetType="{x:Type ListViewItem}">
                <Setter Property="Foreground" Value="#827e7e" />
                <Setter Property="FontFamily" Value="黑体"></Setter>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" />
               
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="{TemplateBinding Margin}">
                                <Grid x:Name="PART_Root" Margin="{TemplateBinding Padding}">
                                    <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <ContentPresenter x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                    <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                                </Trigger>
                               
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="#17b38e" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="#efefef" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="#17b38e" />
                                    <Setter Property="Foreground" Value="White" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

           

            <!--DefaultListView-->
            <Style x:Key="DefaultListView" TargetType="{x:Type ListView}">
                <Setter Property="BorderBrush" Value="#7debd2" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderThickness" Value="0,1,1,1" />
                <!--False会关闭虚拟化-->
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
                <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                <Setter Property="AlternationCount" Value="2" />
                <!-- Things taken from the original template. -->
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SelectionMode" Value="Single" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultListViewItem}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ScrollViewer Padding="{TemplateBinding Padding}" Style="{StaticResource DefaultGridViewScrollViewerStyle}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Border" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ColumnHeader-->

        </ResourceDictionary>
    </Application.Resources>
</Application>
